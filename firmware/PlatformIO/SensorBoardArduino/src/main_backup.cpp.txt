#include <Arduino.h>

#include "SPIsensors.h"
#include "I2Csensors.h"
#include "WiFi.h"
#include "Stopwatch.h"

#include <FileSystem.h>
#include <GlobalSettings.h>
#include <SPI.h>
#include <BMP280.h>
#include <MPU9250.h>
#include <TestSensor.h>

void setup()
{
	// Self-test
	//int result = Catch::Session().run();

	// Filesystem initialization
	FileSystem fs;
	GlobalSettings settings(fs.getConfigFile());

	// Connection initialization
	WiFi wifi;
	bool isConnected = false;
	if(settings.isWiFiClient)
	{
		isConnected = wifi.connectTo(settings.WiFiSSID, settings.WiFiPassword);
	}
	if(!isConnected && settings.isWiFiAP)
	{
		isConnected = wifi.createAP(settings.WiFiSSID, settings.WiFiPassword);
		assert(isConnected);
	}

	// Sensors initialization
	//SPIsensors spiSensors;
	//I2Csensors i2cSensors;

	// Start logging
	bool isLoggingData = settings.startLoggingImmediately;
	bool isSendingData = true;

	FILE* sdCSV = fs.getLogFile();
	Stopwatch loopWatch(10);

	//TODO: test MPU9250
	//SPI spiBus = SPI(GPIO_NUM_18, GPIO_NUM_21, GPIO_NUM_19);
	//MPU9250 mpu(spiBus, 1000000, GPIO_NUM_5);
	//mpu.init(false, false);
	TestSensor testSensor;

    // Enter main loop
    for(;;)
    {
		if(isLoggingData || isSendingData)
    	{
    		//spiSensors.readMPU9250();
			//i2cSensors.readBMP280();
			testSensor.read();
    	}
    	if(isLoggingData)
    	{
			if(!sdCSV)
			{
				printf("Log file cannot be opened.\n");
				sdCSV = fs.getLogFile();
			}
			else
			{
				/*Vector3i a = mpu.getAcc();
				Vector3i g = mpu.getGyr();
				Vector3i m = mpu.getMag();
				int16_t  t = mpu.getTemp();
				fprintf(
					sdCSV,
					"MPU;%d;%d;%d;%d;%d;%d;%d;%d;%d;%d;%d;\n",
					loopWatch.getCycles(),
					a.x, a.y, a.z,
					g.x, g.y, g.z,
					m.x, m.y, m.z,
					t
				);
				if(loopWatch.getCycles() % 100 == 0)
				{
					fclose(sdCSV);
					sdCSV = fs.getLogFile();
				}*/
			}
    	}
    	if(isSendingData)
    	{
    		/*Vector3i a = mpu.getAcc();
			Vector3i g = mpu.getGyr();
			Vector3i m = mpu.getMag();
			int16_t  t = mpu.getTemp();
    		printf(
				"MPU;%d;%d;%d;%d;%d;%d;%d;%d;%d;%d;%d;\n",
				loopWatch.getCycles(),
				a.x, a.y, a.z,
				g.x, g.y, g.z,
				m.x, m.y, m.z,
				t
			);*/
    	}
    	//TODO: read console char breaks the loop
    	//TODO: main loop> receives commands from USB or WiFi
    	//TODO: working as WiFi AP or device

    	if(!loopWatch.waitForNext())
    		printf("Loop overflow. The loop has taken more than 10 ms.\n");
    }

    //TODO: program ended -> restart esp
}

// Just for feeding Arduino
void loop() {}
